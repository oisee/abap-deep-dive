# Патч для важных исправлений Главы 4
# Дата: 2025-07-21
# Применить с помощью скрипта apply_patches.py

## ВАЖНЫЕ ИСПРАВЛЕНИЯ

### Исправление 9: Уточнить механизм Extended Memory mapping
- Файл: ADD - Глава 4 Иерархия памяти - балансировка между масштабируемостью и выживанием.md
- Строка: 71-77
- Найти: "MAP_PRIVATE"
- Заменить: "MAP_SHARED для общей памяти между процессами, MAP_PRIVATE для приватных областей"
- Причина: Extended Memory использует shared mapping для общих данных

### Исправление 10: Добавить платформенную специфику
- Файл: ADD - Глава 4 Иерархия памяти - балансировка между масштабируемостью и выживанием.md
- Строка: после 44
- Добавить:
```
## Платформенные различия

### Unix/Linux
- Использует System V shared memory (shmat/shmdt)
- mmap для memory-mapped файлов
- /dev/shm для tmpfs

### Windows
- CreateFileMapping/MapViewOfFile для shared memory
- VirtualAlloc для heap memory
- Global heap functions
```
- Причина: Отсутствует важная информация о различиях платформ

### Исправление 11: Уточнить значение em/initial_size_MB
- Файл: ADD - Глава 4 Иерархия памяти - балансировка между масштабируемостью и выживанием.md
- Строка: 212
- Найти: "em/initial_size_MB = 4096"
- Заменить: "em/initial_size_MB = 4096  # Пример для небольшой системы (по умолчанию 16384)"
- Причина: Не указано что это пример

### Исправление 12: Добавить параметр em/address_space_MB
- Файл: ADD - Глава 4 Иерархия памяти - балансировка между масштабируемостью и выживанием.md
- Строка: после 237
- Добавить:
```
### Важный параметр: em/address_space_MB

Ограничивает общее адресное пространство для Extended Memory:
- По умолчанию: 8192 MB (32-bit), не ограничено (64-bit)
- Рекомендация: оставить по умолчанию для 64-bit систем
- Для 32-bit: может потребоваться уменьшение при проблемах с адресным пространством
```
- Причина: Критически важный параметр не упомянут

### Исправление 13: Расширить описание Roll Area
- Файл: ADD - Глава 4 Иерархия памяти - балансировка между масштабируемостью и выживанием.md
- Строка: 244-258
- Найти: описание Roll Area
- Заменить:
```
## Roll Area - многоуровневая система

Roll Area состоит из трех компонентов:

1. **Roll Buffer** (shared memory)
   - Параметр: rdisp/ROLL_SHM
   - Быстрая память для активных контекстов
   - По умолчанию: 16 MB

2. **Roll File** (файловая система)
   - Параметр: rdisp/ROLL_MAXFS
   - Используется при переполнении Roll Buffer
   - По умолчанию: 32 GB

3. **Roll Extension** (Extended Memory)
   - Параметр: ztta/roll_extension
   - Основное хранилище пользовательских контекстов
   - По умолчанию: 2 GB на пользователя
```
- Причина: Неполное описание механизма

### Исправление 14: Добавить параметр rdisp/ROLL_MAXFS
- Файл: ADD - Глава 4 Иерархия памяти - балансировка между масштабируемостью и выживанием.md
- Строка: 489
- После rdisp/ROLL_SHM добавить:
```
rdisp/ROLL_MAXFS<br/>Максимальный размер Roll File
```
- Причина: Важный параметр отсутствует

### Исправление 15: Добавить режимы синхронизации буферов
- Файл: ADD - Глава 4 Иерархия памяти - балансировка между масштабируемостью и выживанием.md
- Строка: после 589
- Добавить:
```
### Режимы синхронизации буферов (rdisp/bufrefmode)

1. **sendon,exeauto** (по умолчанию)
   - Автоматическая синхронизация при изменениях
   - Минимальная задержка

2. **sendon,exeoff**
   - Отправка уведомлений без автоматического обновления
   - Требует ручной синхронизации

3. **sendoff,exeoff**
   - Полностью отключена синхронизация
   - Только для тестовых систем!
```
- Причина: Критически важная информация отсутствует